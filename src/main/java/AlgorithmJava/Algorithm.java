package AlgorithmJava;

import java.util.Arrays;

/**
 * Project Algorithm
 *
 * @Author Zoer Aleksandr
 * Created 26.04.2021 2:31
 */

/*
Задание 1.1
Приведите пример алгоритмов и структур данных из жизни.

Структуры данных применяются во многих сферах жизни человека. Например при номерации домов и квартир, в списке сотрудников или студентов,
в списке покупок, в телефонном справочнике, номерации входящей документации и т.д.

В зависимости от структуры данных выбирается алгоритм работы с ними. К примеру, если структура представляет собой отсортировонный список
как в телефонном справочнике и необходимо найти фамилию на букву А,то открыв первую страницу мы без труда найдем нужный номер.
Или возьмем другой пример с номерацией домов. Если необходимо найти дом №4, зная что четные номера справа, мы сэкономим до 50% времении на поиск,
если будем искать только с правой стороны.
*/


/*
Задание 1.2
Приведите пример алгоритмов и структур данных в программировании.

В програмировании применяются такие структуры данных как массивы, списки, стеки. В зависимости от поставленной задачи и от структуры даннных
применяюся алгоритмы сортировки (пузырьковая, слиянием), алгоритм поиска нужного элемента (перебором - для небольшого и несотрированного списка,
двоичный поиск - для сортированного списка).
Выбор подходящего аглоритма позволяет экономить временные и технические ресурсы при выполнении поставленной задачи.
*/

/*
Задание 1.3
Напишите программный код, в котором все данные хранятся только в переменных трех типов данных: Ссылочные, примитивные и своего класса содержащего:
конструктор и метод отображения данных.
Выведите написанные данные.
*/

public class Algorithm {
    private String name;
    private int age;

    private Algorithm(String name, int age) {
        this.name = name;
        this.age = age;
    }

    @Override
    public String toString() {
        return this.name + " " + this.age;
    }

    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        System.out.println("Ссылочная переменная класса [I - " + Arrays.toString(arr));
        int i = 0;
        System.out.println("Примитивная переменная int - " + i);
        Algorithm algorithm = new Algorithm("Aleksandr", 30);
        System.out.println("Переменная собственного класса Algorithm - " + algorithm);


    /*Задание 1.4
    Дополните предыдущий код сравнением ваших данных с другой переменной, данный код должен имитировать простейший поиск перебором.
    Оцените время выполнения алгоритма с помощью базового метода System.nanoTime().*/

        int x = 4;
        long start = System.nanoTime();
        for (int z : arr) {
            if (x > z) System.out.println(x + " > " + z);
            else if (x < z) System.out.println(x + " < " + z);
            else System.out.println(x + " = " + z);
        }
        System.out.println("Время выполнения сравнения: " + (System.nanoTime() - start) + "нс");
    }

}
